GIT
Material: https://git-scm.com/book/en/v2

Concepts
-Branch: cria uma cópia exata de 'master' para realizar alterações
-Commit: ao realizar um commit criamos um snapshot marcando o envio de nossas alterações
-Merge: basicamente coloca os commits do branch no 'master'
-Remote: are versions of yout project that are hosted on the internet or somewere else. By default the remote name after clone a repository is origin, so 'git fetch origin' fetches any new work that has been pushed on the server since you cloned it.
-Fork: If we alread made a fork and clone, and wanted to make pull request to original repository we will need to add a remote recommended call 'upstream' like this: git remote add upstream URL_original. Try to push in a orinal remote without permission is impossible, but we can modify the forked repo adding a remote from your account, your SSH. Keep the forked repository up to date
-Conflicts: Ocurr when we merge or rebase they are indicated in the file when we change a same line in different commits 

Inicializing: 
git --version
git --global user.name ~Username~
git --global user.email ~Your email~
git init: Define o diretório para o git
git status: Status atual do git

Some commands:

-git clone '<URL>': create a repository copy in our directory. Set the local master branch to follow the remote master branch; -o <remote_name>

-git remote 'add <remote_name> <URL>': list the remote shortnames who we specified; -v show the URLs; 'show <remote> give extra informations to inspect'

-git fetch '<origin>':update all the local tracking branches in your Git folder that means import commits from a remote repo to your local repo they are stored on remote branches, see that with "git branch -a" 

-git pull '<origin> <master>': Merge the remote branch to your current branch. Basicaly it's fetch + merge

-git push '<remote> <branch>': send the files to upstream, puting the select branch to your remote. If someone made another push we need to fech before clone to arrange conflicts; '--delete <remote> <branch_name>'

-git chekout '-b <branch_name>': creates a new branch and changes to it

-git checkout '<number_of_commit>': check a commit that already made

-git status: show the staus of files. Can be untracked, modified, staged, committed
-git diff: show information about changes on local files

-git branch '<branch_name>': creates a new branch; '-d <branch_name>' delete a branch

-git merge '<branch_name>': Apply the commits of a branch in the current branch;If exists any commit in the current branch wich not exist in another branch a merge commit is created. They oly will be equal if we made a merge in both (Recommended if you do a lot of changes in your project)

-git rebase '<branch>': Remove the commits in front of the base apply the branch commits and finaly aply again the removed commits one by one, in this mode the commits will have a real line history

Undoing things
-git checkout -- <file_name>: Unmodify a modified file

-git reset HEAD <file_name>: Unstage a staged file

-git commit '--amend': Allows us to make additional changes on the commit mensage

-git add '<forgotten_file>'
git commit -ammend : Add the file to stage to be committed

-git 'worktree': Allows you check than one branch in different folders;'add', 'remove', 'list', 'move', 'prune','lock', 'unlock'

-git '--work-tree=<path>': set the work tree to the specific folder

-git stash: ---------------------


After a pull we can reset local branch to what is at remote
-git chekout '<file_name>'
-git checkout . Use this only if you don't have any uncommited changes
OR
git reset --hard <remote>/<branch>

Overwrite files
It will fetch the current files on a specific branch and the reset resets the branch to the branch we fetched
-git fetch <remote> <branch>
-git reset --hard <remote>/<branch>


Workflow
When we need to contribute on another repository basicaly do this steps:
-Fork the the repository of interest;
-Clone the forked repository from your account;
-Create a upstream to original repository;
-Create a branch(On your local Git repository)
-Make changes on files
-Commit your local branch

